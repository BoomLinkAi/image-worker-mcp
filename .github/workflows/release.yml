name: Release to NPM

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Required for creating releases
      id-token: write # Required for npm provenance
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch full history for changelog generation
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run linters
      run: pnpm lint

    - name: Run type checking
      run: pnpm typecheck

    - name: Run tests
      run: pnpm test

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Verify package.json version matches tag
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        TAG_VERSION="${{ steps.extract_version.outputs.version }}"
        if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
          echo "Error: package.json version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
          exit 1
        fi
        echo "Version verification passed: $PACKAGE_VERSION"

    - name: Build project
      run: pnpm build

    - name: Publish to npm
      run: node scripts/publish.js
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.tag }}
        release_name: Release ${{ steps.extract_version.outputs.tag }}
        body: |
          ## Changes in ${{ steps.extract_version.outputs.tag }}
          
          See [Changelog.md](https://github.com/${{ github.repository }}/blob/main/Changelog.md) for detailed changes.
          
          **NPM Package**: [@boomlinkai/image-worker-mcp@${{ steps.extract_version.outputs.version }}](https://www.npmjs.com/package/@boomlinkai/image-worker-mcp/v/${{ steps.extract_version.outputs.version }})
        draft: false
        prerelease: false

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Notify success
      run: |
        echo "🎉 Successfully released @boomlinkai/image-worker-mcp@${{ steps.extract_version.outputs.version }} to npm!"
        echo "📦 NPM: https://www.npmjs.com/package/@boomlinkai/image-worker-mcp/v/${{ steps.extract_version.outputs.version }}"
        echo "🏷️ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.extract_version.outputs.version }}"